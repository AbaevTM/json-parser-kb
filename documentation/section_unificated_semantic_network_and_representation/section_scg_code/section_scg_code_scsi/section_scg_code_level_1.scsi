scg_code_1_level => nrel_main_idtf: 
	[SCg-код уровня 1] (* <- lang_ru;; *);
	[SCg-code level 1] (* <- lang_en;; *);

=> nrel_idtf: 
	[SCg-ядро] (* <- lang_ru;; *);

<- rrel_key_sc_element:
	..scg_code_1_level_explanation1
	(*
	<- sc_explanation;;
	<= nrel_sc_text_translation:	
		..translation_scg_code_1_level_explanation1
		(*
		-> rrel_example:
	[
	Разработка такого способа в полном объёме является целью отдельного проекта. Сейчас для более детального рассмотрения синтаксиса SC-кода нам потребуются минимальные, но семантически полные средства SCg-кода, обеспечивающие изображение любых sc-конструкций. Такие базовые средства SCg-кода назовем ядром SCg-кода (SCg-ядром). Основными свойствами SCg-ядра являются:
	•	каждая информационная конструкция, принадлежащая SCg-ядру, изоморфна той sc-конструкции, которую она графически изображает. В этом смысле средства SCg-ядра максимально близки SC-коду.
	•	в конструкциях, принадлежащих SCg-ядру, как и в sc-конструкциях, запрещена синонимия элементов этих конструкций. Конструкции SCg-ядра удобны для иллюстрации синтаксических и семантических свойств SC-кода, но не удобны для широкого практического использования в качестве языка визуализации sc-конструкций, т.к. не являются наглядными. Разработка SCg-кода как раз и направлена на разрешение этого противоречия (см. SCg-код ). 
	]
		(* <- lang_ru;; *);;
		*);;
	*);

<- rrel_key_sc_element:
	..scg_code_1_level_explanation2
	(*
	<- sc_explanation;;
	=> hypermedia_nrel_illustration: "file://files/level1_identification.png";;
	<= nrel_sc_text_translation:	
		..translation_scg_code_1_level_explanation2
		(*
		-> rrel_example:
	[
	SCg-код позволяет использовать внешние идентификаторы объектов, что позволяет пользователю лучше ориентироваться в отображаемой на экране информации. Чтобы дать пользователю возможность читать тексты записанные с помощью SCg-кода (sc.g-тексты), некоторым из sc.g-элементов могут приписываться текстовые идентификаторы. Эти идентификаторы представлены в базе знаний и они могут быть двух видов: глобальный идентификатор* или основной идентификатор* для некоторого языка. Более подробно о том как идентифицируются объекты можно почитать в правилах идентификации.
	Идентификатор изображается рядом с идентифицируемым sc.g-элементом (на небольшом расстоянии). К примеру узел с идентификатором множество изображается следующим образом: 
	]	(* <- lang_ru;; *);;
	*);;	
*);

<- rrel_key_sc_element:
	..scg_code_1_level_explanation3
	(*
	<- sc_explanation;;
	<= nrel_sc_text_translation:	
		..translation_scg_code_1_level_explanation3
		(*
		-> rrel_example:
			"file://files/level1_table.png"
			(* <- lang_ru;; *);;
		*);;
	*);

-> rrel_example:
	"file://files/level1_triangle_ABC.png"
	(*
	<- rrel_key_sc_element:
		..scg_code_1_level_comment1
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scg_code_1_level_comment1
			(*
			-> rrel_example:
				[Имеется треугольник с вершинами в точках A, B и C.]
				(* <- lang_ru;; *);;
			*);;
		*);;
	*);

-> rrel_example:
	"file://files/level1_moon.png"
	(*
	<- rrel_key_sc_element:
		..scg_code_1_level_comment2
		(*
		<- sc_explanation;;
		<= nrel_sc_text_translation:	
			..translation_scg_code_1_level_comment2
			(*
			-> rrel_example:
				[Луна вращается вокруг планеты "Земля".]
				(* <- lang_ru;; *);;
			*);;
		*);;
	*);

<- rrel_key_sc_element:
	..scg_code_1_level_explanation4
	(*
	<- sc_explanation;;
	<= nrel_sc_text_translation:	
		..translation_scg_code_1_level_explanation4
		(*
		-> rrel_example:
	[
	Из примеров видно, что в большом количестве случаев используется много однотипных конструкций, которые определяют тип sc-элементов:
	•	sc-узел, обозначающий константную структуру;
	•	sc-узел, обозначающий константное бинарное неролевое отношение;
	•	константная ориентированная пара sc-элементов;
	•	и т. д.
	]
		(* <- lang_ru;; *);;
		*);;
	*);;
